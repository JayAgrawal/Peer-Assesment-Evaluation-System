{"ast":null,"code":"var _jsxFileName = \"/Users/jayagrawal/Documents/GitHub/Delivery4/frontend/src/Containers/PeerAssesmentsStudent.js\";\nimport React, { Component } from \"react\";\nimport Moment from \"moment\"; // HomePage\n\nimport Assesments from \"../Components/DashboardStudent/Assesments\";\nimport ToDOModal from \"../Components/DashboardStudent/SubmitModal\"; // Nav\n\nimport Nav from \"../Components/NavBar\"; // redirect\n\nimport { Redirect } from \"react-router-dom\";\nconst assesmentsToDo = [\n  /*{\n        name:'Delivery 6 Assesments',\n        teamMates:['Pedro', 'John', 'Adam'],\n        dueDate: new Date(),\n        id:12312\n    }*/\n];\nconst assesmentsClosed = [\n  /*{\n        name:'Delivery 5 Assesments',\n        teamMates:['Pedro', 'John', 'Adam'],\n        dueDate: Moment(new Date()).subtract(10, 'days').calendar(),\n        id:12312\n    }*/\n];\n\nclass StudentHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openToDoModal: false,\n      todoSelected: null,\n      todoResponses: null,\n      logout: false,\n      evaluations: [],\n      team: [],\n      sliderRating: [],\n      textComment: [],\n      teamMembersID: []\n    };\n\n    this.openModalHandler = e => {\n      this.setState({\n        openToDoModal: true,\n        todoSelected: assesmentsToDo[e]\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openToDoModal: false\n      });\n    };\n\n    this.submitEval = () => {\n      let tempArr = this.state.sliderRating;\n\n      for (let i = 0; i < tempArr.length; i++) {\n        fetch(\"http://127.0.0.1:8000/api/Evaluation/\", {\n          method: \"post\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            evaluation_name: this.state.todoSelected.evaluation_name,\n            rating: tempArr[i],\n            comment: \"Testing\",\n            dueDate: this.state.todoSelected.dueDate,\n            completed: true,\n            student: this.state.teamMembersID[i],\n            teamMembers: this.state.todoSelected.teamMembers.slice(-1)[0]\n          })\n        });\n      }\n\n      fetch(\"http://127.0.0.1:8000/api/Evaluation/\" + this.state.todoSelected.id, {\n        method: 'DELETE'\n      });\n      this.handleClose();\n      this.state.sliderRating = [];\n      tempArr = [];\n    };\n\n    this.onLogout = () => {\n      this.setState({\n        logout: true\n      });\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const resEval = await fetch(\"http://127.0.0.1:8000/api/Evaluation\");\n      const evaluations = await resEval.json();\n      this.setState({\n        evaluations\n      });\n      const resTeam = await fetch(\"http://127.0.0.1:8000/api/Team\");\n      const team = await resTeam.json();\n      this.setState({\n        team\n      });\n      let studentLoggedIn = [];\n\n      if (localStorage && localStorage.getItem(\"studentLoggedIn\")) {\n        studentLoggedIn = JSON.parse(localStorage.getItem(\"studentLoggedIn\"));\n      }\n\n      for (let i = 0; i < Object.keys(this.state.evaluations).length; i++) {\n        if (studentLoggedIn.id == this.state.evaluations[i].student) {\n          for (let j = 0; j < Object.keys(this.state.team).length; j++) {\n            if (this.state.evaluations[i].teamMembers == this.state.team[j].id) {\n              this.state.evaluations[i].teamMembers = [this.state.team[j].member1, this.state.team[j].member2, this.state.team[j].member3, this.state.team[j].member4, this.state.team[j].id];\n              this.state.teamMembersID = [this.state.team[j].member1_id, this.state.team[j].member2_id, this.state.team[j].member3_id, this.state.team[j].member4_id];\n            }\n          }\n\n          if (this.state.evaluations[i].completed == false) {\n            var today = new Date();\n            var todayDate = today.getFullYear() + \"-0\" + (today.getMonth() + 1) + \"-\" + today.getDate(); //MUST REMOVE 0's AFTER MAY 10th\n\n            if (this.state.evaluations[i].dueDate >= todayDate) {\n              if (assesmentsToDo.some(temp => temp.id === this.state.evaluations[i].id)) {} else {\n                assesmentsToDo.push(this.state.evaluations[i]);\n              }\n            } else {\n              if (assesmentsClosed.some(temp => temp.id === this.state.evaluations[i].id)) {} else {\n                assesmentsClosed.push(this.state.evaluations[i]);\n              }\n            }\n          }\n        }\n      }\n\n      assesmentsToDo.sort((a, b) => a.dueDate > b.dueDate ? 1 : -1);\n      assesmentsClosed.sort((a, b) => a.dueDate > b.dueDate ? 1 : -1);\n    } catch (e) {\n      console.log(e);\n    }\n  } // *----------HANDLE MODAL METHODS------------------*\n\n\n  render() {\n    return React.createElement(Nav, {\n      user: \"Student\",\n      onLogout: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Assesments, {\n      toDoArr: assesmentsToDo,\n      closedArr: assesmentsClosed,\n      openModal: this.openModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(ToDOModal, {\n      close: this.handleClose,\n      open: this.state.openToDoModal,\n      info: this.state.todoSelected,\n      arrayRating: this.state.sliderRating,\n      arrayComment: this.state.textComment,\n      submit: this.submitEval,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), this.state.logout === true ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default StudentHome;","map":{"version":3,"sources":["/Users/jayagrawal/Documents/GitHub/Delivery4/frontend/src/Containers/PeerAssesmentsStudent.js"],"names":["React","Component","Moment","Assesments","ToDOModal","Nav","Redirect","assesmentsToDo","assesmentsClosed","StudentHome","state","openToDoModal","todoSelected","todoResponses","logout","evaluations","team","sliderRating","textComment","teamMembersID","openModalHandler","e","setState","handleClose","submitEval","tempArr","i","length","fetch","method","headers","Accept","body","JSON","stringify","evaluation_name","rating","comment","dueDate","completed","student","teamMembers","slice","id","onLogout","componentDidMount","resEval","json","resTeam","studentLoggedIn","localStorage","getItem","parse","Object","keys","j","member1","member2","member3","member4","member1_id","member2_id","member3_id","member4_id","today","Date","todayDate","getFullYear","getMonth","getDate","some","temp","push","sort","a","b","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Moment from \"moment\";\n\n// HomePage\nimport Assesments from \"../Components/DashboardStudent/Assesments\";\nimport ToDOModal from \"../Components/DashboardStudent/SubmitModal\";\n\n// Nav\nimport Nav from \"../Components/NavBar\";\n\n// redirect\nimport { Redirect } from \"react-router-dom\";\n\nconst assesmentsToDo = [\n  /*{\n        name:'Delivery 6 Assesments',\n        teamMates:['Pedro', 'John', 'Adam'],\n        dueDate: new Date(),\n        id:12312\n    }*/\n];\n\nconst assesmentsClosed = [\n  /*{\n        name:'Delivery 5 Assesments',\n        teamMates:['Pedro', 'John', 'Adam'],\n        dueDate: Moment(new Date()).subtract(10, 'days').calendar(),\n        id:12312\n    }*/\n];\n\nclass StudentHome extends Component {\n  state = {\n    openToDoModal: false,\n    todoSelected: null,\n    todoResponses: null,\n    logout: false,\n\n    evaluations: [],\n    team: [],\n    sliderRating: [],\n    textComment: [],\n    teamMembersID:[]\n  };\n\n  async componentDidMount() {\n    try {\n      const resEval = await fetch(\"http://127.0.0.1:8000/api/Evaluation\");\n      const evaluations = await resEval.json();\n      this.setState({ evaluations });\n\n      const resTeam = await fetch(\"http://127.0.0.1:8000/api/Team\");\n      const team = await resTeam.json();\n      this.setState({ team });\n\n      let studentLoggedIn = [];\n            if(localStorage && localStorage.getItem(\"studentLoggedIn\")){\n                studentLoggedIn = JSON.parse(localStorage.getItem(\"studentLoggedIn\"));\n            }\n\n      for (let i = 0; i < Object.keys(this.state.evaluations).length; i++) {\n        if(studentLoggedIn.id == this.state.evaluations[i].student){\n          for (let j = 0; j < Object.keys(this.state.team).length; j++) {\n            if (this.state.evaluations[i].teamMembers == this.state.team[j].id) {\n              this.state.evaluations[i].teamMembers = [\n                this.state.team[j].member1,\n                this.state.team[j].member2,\n                this.state.team[j].member3,\n                this.state.team[j].member4,\n                this.state.team[j].id\n              ];\n              this.state.teamMembersID = [\n                this.state.team[j].member1_id,\n                this.state.team[j].member2_id,\n                this.state.team[j].member3_id,\n                this.state.team[j].member4_id,\n              ];\n            }\n          }\n\n          if (this.state.evaluations[i].completed == false) {\n            var today = new Date();\n            var todayDate =\n              today.getFullYear() +\n              \"-0\" +\n              (today.getMonth() + 1) +\n              \"-\" +\n              today.getDate(); //MUST REMOVE 0's AFTER MAY 10th\n\n            if (this.state.evaluations[i].dueDate >= todayDate) {\n              if (\n                assesmentsToDo.some(\n                  temp => temp.id === this.state.evaluations[i].id\n                )\n              ) {\n              } else {\n                assesmentsToDo.push(this.state.evaluations[i]);\n              }\n            } else {\n              if (\n                assesmentsClosed.some(\n                  temp => temp.id === this.state.evaluations[i].id\n                )\n              ) {\n              } else {\n                assesmentsClosed.push(this.state.evaluations[i]);\n              }\n            }\n          }\n        }\n      }\n\n      assesmentsToDo.sort((a, b) => (a.dueDate > b.dueDate ? 1 : -1));\n      assesmentsClosed.sort((a, b) => (a.dueDate > b.dueDate ? 1 : -1));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // *----------HANDLE MODAL METHODS------------------*\n  openModalHandler = e => {\n    this.setState({\n      openToDoModal: true,\n      todoSelected: assesmentsToDo[e]\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      openToDoModal: false\n    });\n  };\n\n  submitEval = () => {\n    let tempArr = this.state.sliderRating\n    for (let i = 0; i < tempArr.length; i++){\n      fetch(\"http://127.0.0.1:8000/api/Evaluation/\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          evaluation_name: this.state.todoSelected.evaluation_name,\n          rating: tempArr[i],\n          comment: \"Testing\",\n          dueDate: this.state.todoSelected.dueDate,\n          completed: true,\n          student: this.state.teamMembersID[i],\n          teamMembers: this.state.todoSelected.teamMembers.slice(-1)[0]\n        })\n      });\n    }\n    fetch(\"http://127.0.0.1:8000/api/Evaluation/\" + this.state.todoSelected.id, {\n      method: 'DELETE',\n    });\n\n    this.handleClose();\n    this.state.sliderRating = [];\n    tempArr = [];\n  };\n\n  // LOGOUT\n  onLogout = () => {\n    this.setState({\n      logout: true\n    });\n  };\n\n  render() {\n    return (\n      <Nav user=\"Student\" onLogout={this.onLogout}>\n        <Assesments\n          toDoArr={assesmentsToDo}\n          closedArr={assesmentsClosed}\n          openModal={this.openModalHandler}\n        />\n\n        <ToDOModal\n          close={this.handleClose}\n          open={this.state.openToDoModal}\n          info={this.state.todoSelected}\n          arrayRating={this.state.sliderRating}\n          arrayComment={this.state.textComment}\n          submit={this.submitEval}\n        />\n\n        {this.state.logout === true ? <Redirect to=\"/login\" /> : null}\n      </Nav>\n    );\n  }\n}\n\nexport default StudentHome;\n"]},"metadata":{},"sourceType":"module"}