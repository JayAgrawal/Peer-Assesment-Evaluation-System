{"ast":null,"code":"var _jsxFileName = \"/Users/jayagrawal/Documents/GitHub/Delivery4/frontend/src/Containers/Login.js\";\nimport React, { Component } from 'react';\nimport Container from '@material-ui/core/Container'; // import pages\n\nimport FirstPage from '../Components/Login/1stPage';\nimport StudentLogin from '../Components/Login/StudentLogin';\nimport ProfessorLogin from '../Components/Login/ProfessorLogin'; // Import Custom Components\n\nimport SnackBar from '../Components/Login/SnackBar'; // import router redirect\n\nimport { withRouter, Redirect } from 'react-router-dom'; // *----------------DUMMY DATA ------------------*\n\nconst professorCredentials = {\n  username: 'professor@bc.edu',\n  pass: '12345678'\n};\nconst studentCredentials = {\n  username: 'student@bc.edu',\n  pass: '12345678'\n};\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      typeSelected: null,\n      step: 0,\n      professorEmail: null,\n      professorPassword: null,\n      studentEmail: null,\n      studentPassword: null,\n      wrongCredentials: false,\n      professorRedirect: false,\n      studentRedirect: false,\n      students: []\n    };\n\n    this.onClickTypeHandler = e => {\n      if (e === 'Student') {\n        this.setState({\n          typeSelected: 'Student'\n        });\n      }\n\n      if (e === 'Professor') {\n        this.setState({\n          typeSelected: 'Professor'\n        });\n      }\n    };\n\n    this.onClickNext = e => {\n      if (this.state.step === 0) {\n        this.setState({\n          step: 1\n        });\n      }\n\n      if (this.state.step === 1) {\n        this.setState({\n          step: 0,\n          typeSelected: null,\n          studentEmail: null,\n          studentPassword: null,\n          professorEmail: null,\n          professorPassword: null\n        });\n      }\n    };\n\n    this.textHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.loginHandler = async e => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (this.state.typeSelected === 'Student') {\n        // *----------- CHANGE WITH DJANGO SERVER ---------------*\n        if (studentCredentials.username !== this.state.studentEmail.toLowerCase() || studentCredentials.pass !== this.state.studentPassword) {\n          this.setState({\n            wrongCredentials: true\n          });\n        } else {\n          // *--------- ADD TOKEN ----------------*\n          // localStorage.setItem('token',login.data.token)\n          localStorage.setItem('userType', 'Student');\n          this.setState({\n            studentRedirect: true\n          });\n        }\n      }\n\n      if (this.state.typeSelected === 'Professor') {\n        // *----------- CHANGE WITH DJANGO SERVER ---------------*\n        if (professorCredentials.username !== this.state.professorEmail.toLowerCase() || professorCredentials.pass !== this.state.professorPassword) {\n          this.setState({\n            wrongCredentials: true\n          });\n        } else {\n          localStorage.setItem('userType', 'Professor');\n          this.setState({\n            professorRedirect: true\n          });\n        }\n      }\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        wrongCredentials: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch('http://127.0.0.1:8000/api/Student');\n      const students = await res.json();\n      this.setState({\n        students\n      });\n      console.log(students);\n    } catch (e) {\n      console.log(e);\n    }\n  } // *-----------HANDLE SELECT TYPE ------*\n\n\n  render() {\n    // pageContent\n    let pageContent = React.createElement(FirstPage, {\n      clickTypeHandler: this.onClickTypeHandler,\n      selected: this.state.typeSelected,\n      nextHandler: this.onClickNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }); // Change to Student Login \n\n    if (this.state.step === 1 && this.state.typeSelected === 'Student') {\n      pageContent = React.createElement(StudentLogin, {\n        handleBack: this.onClickNext,\n        textHandler: this.textHandler,\n        loginHandler: this.loginHandler,\n        pass: this.state.studentPassword,\n        email: this.state.studentEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      });\n    } // Change to Professor Login \n\n\n    if (this.state.step === 1 && this.state.typeSelected === 'Professor') {\n      pageContent = React.createElement(ProfessorLogin, {\n        handleBack: this.onClickNext,\n        textHandler: this.textHandler,\n        loginHandler: this.loginHandler,\n        pass: this.state.professorPassword,\n        email: this.state.professorEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Container, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, pageContent, React.createElement(SnackBar, {\n      message: \"Wrong Credentials\",\n      open: this.state.wrongCredentials,\n      handleClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), this.state.professorRedirect ? React.createElement(Redirect, {\n      to: \"/professorHome/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }) : null, this.state.studentRedirect ? React.createElement(Redirect, {\n      to: \"/studentHome/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/jayagrawal/Documents/GitHub/Delivery4/frontend/src/Containers/Login.js"],"names":["React","Component","Container","FirstPage","StudentLogin","ProfessorLogin","SnackBar","withRouter","Redirect","professorCredentials","username","pass","studentCredentials","Login","state","typeSelected","step","professorEmail","professorPassword","studentEmail","studentPassword","wrongCredentials","professorRedirect","studentRedirect","students","onClickTypeHandler","e","setState","onClickNext","textHandler","target","id","value","loginHandler","preventDefault","stopPropagation","toLowerCase","localStorage","setItem","handleClose","event","reason","componentDidMount","res","fetch","json","console","log","render","pageContent","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Container from '@material-ui/core/Container'\n// import pages\nimport FirstPage from '../Components/Login/1stPage'\nimport StudentLogin from '../Components/Login/StudentLogin'\nimport ProfessorLogin from '../Components/Login/ProfessorLogin'\n\n// Import Custom Components\nimport SnackBar from '../Components/Login/SnackBar'\n\n// import router redirect\n\nimport {withRouter,Redirect} from 'react-router-dom'\n\n\n// *----------------DUMMY DATA ------------------*\nconst professorCredentials ={\n    username:'professor@bc.edu',\n    pass:'12345678'\n}\n\nconst studentCredentials ={\n    username:'student@bc.edu',\n    pass:'12345678'\n}\n\n\nclass Login extends Component{\n\n    // *------------ INITIALIZE STATE ----------------*\n    state={\n        typeSelected:null,\n        step:0,\n\n        professorEmail:null,\n        professorPassword:null,\n\n        studentEmail:null,\n        studentPassword:null,\n\n        wrongCredentials: false,\n\n        professorRedirect:false,\n        studentRedirect:false,\n\n        students: [],\n\n    };\n\n    async componentDidMount() {\n        try {\n          const res = await fetch('http://127.0.0.1:8000/api/Student');\n          const students = await res.json();\n          this.setState({\n            students\n          });\n          console.log(students);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n    // *-----------HANDLE SELECT TYPE ------*\n\n    onClickTypeHandler=e=>{\n        if(e==='Student'){\n            this.setState({\n                typeSelected:'Student'\n            })\n        }\n        if(e==='Professor'){\n            this.setState({\n                typeSelected:'Professor'\n            })\n        }\n    }\n\n    // *------------- NEXT -------------*\n    onClickNext=e=>{\n        if(this.state.step===0){\n            this.setState({\n                step:1\n            })\n        }\n        if(this.state.step===1){\n            this.setState({\n                step:0,\n                typeSelected:null,\n                studentEmail:null,\n                studentPassword:null,\n                professorEmail:null,\n                professorPassword:null\n\n            })\n        }\n    }\n\n\n    // *------------ HANDLE CHANGE TEXT ----------------*\n    textHandler=e=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n\n    // *------------- LOGIN -----------------*\n    loginHandler= async e=>{\n        e.preventDefault()\n        e.stopPropagation();\n        if(this.state.typeSelected==='Student'){\n            // *----------- CHANGE WITH DJANGO SERVER ---------------*\n            if(studentCredentials.username!== this.state.studentEmail.toLowerCase() || studentCredentials.pass!==this.state.studentPassword){\n                this.setState({\n                    wrongCredentials:true\n                })\n            }\n            else{\n\n                // *--------- ADD TOKEN ----------------*\n                // localStorage.setItem('token',login.data.token)\n                localStorage.setItem('userType','Student')\n                this.setState({\n                    studentRedirect:true\n                })\n            }\n\n        }\n\n        if(this.state.typeSelected==='Professor'){\n            // *----------- CHANGE WITH DJANGO SERVER ---------------*\n            if(professorCredentials.username !== this.state.professorEmail.toLowerCase() || professorCredentials.pass!==this.state.professorPassword){\n                this.setState({\n                    wrongCredentials:true\n                })\n            }\n            else{\n                localStorage.setItem('userType','Professor')\n                this.setState({\n                    professorRedirect:true\n                })\n\n            }\n\n        }\n\n    }\n\n\n\n    //  *------------ CLOSE NOTIFICATION ----------------*\n     handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        this.setState({\n            wrongCredentials:false\n        })\n      };\n\n\n\n    render(){\n        // pageContent\n        let pageContent = (\n            <FirstPage\n                    clickTypeHandler={this.onClickTypeHandler}\n                    selected={this.state.typeSelected}\n                    nextHandler={this.onClickNext}\n                />\n\n        )\n\n        // Change to Student Login \n        if(this.state.step===1 && this.state.typeSelected==='Student'){\n            pageContent=(\n                <StudentLogin\n                    handleBack={this.onClickNext}\n                    textHandler={this.textHandler}\n                    loginHandler={this.loginHandler}\n                    pass={this.state.studentPassword}\n                    email={this.state.studentEmail}\n                />\n            )\n        }\n\n         // Change to Professor Login \n         if(this.state.step===1 && this.state.typeSelected==='Professor'){\n            pageContent=(\n                <ProfessorLogin\n                    handleBack={this.onClickNext}\n                    textHandler={this.textHandler}\n                    loginHandler={this.loginHandler}\n                    pass={this.state.professorPassword}\n                    email={this.state.professorEmail}\n\n                />\n            )\n        }\n\n\n        return(\n            <Container style={{height:'100%'}}>\n                {pageContent}\n\n\n\n                <SnackBar \n                    message='Wrong Credentials'\n                    open={this.state.wrongCredentials}\n                    handleClose={this.handleClose}\n                \n                />\n\n\n                {this.state.professorRedirect?<Redirect to='/professorHome/'/>:null}\n                {this.state.studentRedirect?<Redirect to='/studentHome/'/>:null}\n\n            </Container>\n        )\n    }\n}\n\n\nexport default withRouter(Login)"]},"metadata":{},"sourceType":"module"}