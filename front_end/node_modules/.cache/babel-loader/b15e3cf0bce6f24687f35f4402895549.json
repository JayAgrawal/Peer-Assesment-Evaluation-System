{"ast":null,"code":"var _jsxFileName = \"/Users/jayagrawal/Documents/GitHub/Group-_-_--FrontEnd/src/Containers/AllAssesmentsProfessor.js\";\nimport React, { Component } from 'react';\nimport Moment from 'moment'; // HomePage\n\nimport Assesments from '../Components/DashboardProfessor/AllAssesments';\nimport ToDOModal from '../Components/DashboardProfessor/ModalProfessor';\nimport CreateModal from '../Components/DashboardProfessor/CreateModal'; // Nav\n\nimport Nav from '../Components/NavBar';\nimport SnackBar from '../Components/Login/SnackBar'; // redirect\n\nimport { Redirect } from 'react-router-dom';\nconst toGrade = [{\n  name: 'Pedro',\n  team: 1,\n  overallGrade: 3.5,\n  assessment: 'Delivery 5 Assessments'\n}, {\n  name: 'John',\n  team: 4,\n  overallGrade: 4.5,\n  assessment: 'Delivery 5 Assessments'\n}, {\n  name: 'Adam',\n  team: 2,\n  overallGrade: 3.9,\n  assessment: 'Delivery 5 Assessments'\n}];\nconst allAssesments = [{\n  name: 'Delivery 1 Assessments',\n  dueDate: Moment(new Date()).subtract(30, 'days').calendar(),\n  overAll: 4.3\n}, {\n  name: 'Delivery 2 Assessments',\n  dueDate: Moment(new Date()).subtract(20, 'days').calendar(),\n  overAll: 4.2\n}, {\n  name: 'Delivery 3 Assessments',\n  dueDate: Moment(new Date()).subtract(15, 'days').calendar(),\n  overAll: 3.3\n}, {\n  name: 'Delivery 4 Assessments',\n  dueDate: Moment(new Date()).subtract(12, 'days').calendar(),\n  overAll: 2.7\n}];\n\nclass StudentHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openToDoModal: false,\n      todoSelected: null,\n      toDoIndex: null,\n      todoResponses: null,\n      logout: false,\n      createModal: false,\n      assessmentName: null,\n      assesmentDueDate: null,\n      notification: false,\n      toGrade: toGrade\n    };\n\n    this.openModalHandler = e => {\n      this.setState({\n        openToDoModal: true,\n        todoSelected: toGrade[e],\n        toDoIndex: e\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openToDoModal: false,\n        createModal: false\n      });\n    };\n\n    this.openCreateModal = () => {\n      this.setState({\n        createModal: true\n      });\n    };\n\n    this.textHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.submitNewHandler = () => {\n      allAssesments.push({\n        name: this.state.assessmentName,\n        dueDate: this.state.assesmentDueDate,\n        overAll: '0'\n      });\n      this.setState({\n        assessmentName: null,\n        assesmentDueDate: null,\n        createModal: false,\n        notification: true\n      });\n    };\n\n    this.submitToDoHandler = () => {\n      toGrade.splice(this.state.toDoIndex, 1);\n      this.setState({\n        openToDoModal: false,\n        createModal: false,\n        toDoIndex: null,\n        todoSelected: null\n      });\n    };\n\n    this.handleCloseNot = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        notification: false\n      });\n    };\n\n    this.onLogout = () => {\n      console.log('here');\n      this.setState({\n        logout: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Nav, {\n      user: \"Professor\",\n      onLogout: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Assesments, {\n      toGrade: toGrade,\n      closedArr: allAssesments,\n      openModal: this.openModalHandler,\n      openCreate: this.openCreateModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(ToDOModal, {\n      close: this.handleClose,\n      open: this.state.openToDoModal,\n      info: this.state.todoSelected,\n      submit: this.submitToDoHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(CreateModal, {\n      close: this.handleClose,\n      open: this.state.createModal,\n      onChangeHandler: this.textHandler,\n      assessmentName: this.state.assessmentName,\n      assessmentDate: this.state.assesmentDueDate,\n      submit: this.submitNewHandler,\n      type: \"assessment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(SnackBar, {\n      message: \"Assesment Created\",\n      open: this.state.notification,\n      handleClose: this.handleCloseNot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.state.logout === true ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default StudentHome;","map":{"version":3,"sources":["/Users/jayagrawal/Documents/GitHub/Group-_-_--FrontEnd/src/Containers/AllAssesmentsProfessor.js"],"names":["React","Component","Moment","Assesments","ToDOModal","CreateModal","Nav","SnackBar","Redirect","toGrade","name","team","overallGrade","assessment","allAssesments","dueDate","Date","subtract","calendar","overAll","StudentHome","state","openToDoModal","todoSelected","toDoIndex","todoResponses","logout","createModal","assessmentName","assesmentDueDate","notification","openModalHandler","e","setState","handleClose","openCreateModal","textHandler","target","id","value","submitNewHandler","push","submitToDoHandler","splice","handleCloseNot","event","reason","onLogout","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Moment from 'moment'\n\n// HomePage\nimport Assesments from '../Components/DashboardProfessor/AllAssesments'\nimport ToDOModal from '../Components/DashboardProfessor/ModalProfessor'\nimport CreateModal from '../Components/DashboardProfessor/CreateModal'\n\n\n\n// Nav\nimport Nav from '../Components/NavBar'\nimport SnackBar from '../Components/Login/SnackBar'\n\n\n// redirect\nimport {Redirect} from 'react-router-dom'\n\n\nconst toGrade=[\n    {\n        name:'Pedro',\n        team:1,\n        overallGrade:3.5,\n        assessment:'Delivery 5 Assessments'\n    },\n    {\n        name:'John',\n        team:4,\n        overallGrade:4.5,\n        assessment:'Delivery 5 Assessments'\n    },\n    {\n        name:'Adam',\n        team:2,\n        overallGrade:3.9,\n        assessment:'Delivery 5 Assessments'\n    }\n]\n\nconst allAssesments=[\n    {\n        name:'Delivery 1 Assessments',\n        dueDate:  Moment(new Date()).subtract(30, 'days').calendar(),\n        overAll: 4.3,\n    },\n    {\n        name:'Delivery 2 Assessments',\n        dueDate:  Moment(new Date()).subtract(20, 'days').calendar(),\n        overAll: 4.2,\n    },\n    {\n        name:'Delivery 3 Assessments',\n        dueDate:  Moment(new Date()).subtract(15, 'days').calendar(),\n        overAll: 3.3,\n    },\n    {\n        name:'Delivery 4 Assessments',\n        dueDate:  Moment(new Date()).subtract(12, 'days').calendar(),\n        overAll: 2.7,\n    },\n]\n\n\n\nclass StudentHome extends Component{\n\n    state={\n        openToDoModal:false,\n        todoSelected:null,\n        toDoIndex:null,\n        todoResponses:null,\n        logout:false,\n        createModal:false,\n\n        assessmentName: null,\n        assesmentDueDate:null,\n        notification:false,\n\n        toGrade:toGrade\n\n    }\n\n\n    // *----------HANDLE MODAL METHODS------------------*\n     openModalHandler = (e) => {\n\n        this.setState({\n            openToDoModal:true,\n            todoSelected:toGrade[e],\n            toDoIndex:e\n\n        });\n      };\n    \n    handleClose = () => {\n        this.setState({\n            openToDoModal:false,\n            createModal:false\n        })\n      };\n\n      openCreateModal = () => {\n       this.setState({\n        createModal:true,\n\n       });\n     };\n\n\n    // *------------ HANDLE CHANGE TEXT ----------------*\n    textHandler=e=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    //  *------------Assesment Create Functions -------------*\n    submitNewHandler=()=>{\n        allAssesments.push({\n            name:this.state.assessmentName,\n            dueDate:this.state.assesmentDueDate,\n            overAll:'0'\n        })\n\n        this.setState({\n            assessmentName:null,\n            assesmentDueDate:null,\n            createModal:false,\n            notification:true\n        })\n    }\n\n      //  *------------Submit ToDo Functions -------------*\n      submitToDoHandler=()=>{\n       toGrade.splice(this.state.toDoIndex,1)\n\n\n       this.setState({\n            openToDoModal:false,\n            createModal:false,\n            toDoIndex:null,\n            todoSelected:null\n        })\n    }\n\n    //  *------------ CLOSE NOTIFICATION ----------------*\n    handleCloseNot = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        this.setState({\n            notification:false\n        })\n      };\n\n\n\n    // LOGOUT\n      onLogout=()=>{\n        console.log('here')\n        this.setState({\n            logout:true\n        })\n    }\n\n\n\n    render(){\n\n      \n        return(\n            <Nav\n                user=\"Professor\"\n                onLogout={this.onLogout}\n\n            >\n                <Assesments\n                toGrade={toGrade}\n                closedArr={allAssesments}\n                openModal={this.openModalHandler}\n                openCreate={this.openCreateModal}\n                />\n\n            <ToDOModal \n                close={this.handleClose}\n                open={this.state.openToDoModal}\n                info={this.state.todoSelected}\n                submit={this.submitToDoHandler}\n            />\n\n            <CreateModal \n                close={this.handleClose}\n                open={this.state.createModal}\n                onChangeHandler={this.textHandler}\n                assessmentName={this.state.assessmentName}\n                assessmentDate={this.state.assesmentDueDate}\n                submit={this.submitNewHandler}\n                type='assessment'\n\n            />\n\n            <SnackBar \n                    message='Assesment Created'\n                    open={this.state.notification}\n                    handleClose={this.handleCloseNot}\n                \n                />\n\n            {this.state.logout===true?<Redirect to='/login' />:null}\n\n            </Nav>\n        )\n    }\n}\n\nexport default StudentHome"]},"metadata":{},"sourceType":"module"}